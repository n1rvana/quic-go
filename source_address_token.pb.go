// Code generated by protoc-gen-go.
// source: source_address_token.proto
// DO NOT EDIT!

package quic

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A SourceAddressToken is serialised, encrypted and sent to clients so that
// they can prove ownership of an IP address.
type SourceAddressToken struct {
	// ip contains either 4 (IPv4) or 16 (IPv6) bytes of IP address in network
	// byte order.
	Ip []byte `protobuf:"bytes,1,req,name=ip" json:"ip,omitempty"`
	// timestamp contains a UNIX timestamp value of the time when the token was
	// created.
	Timestamp *int64 `protobuf:"varint,2,req,name=timestamp" json:"timestamp,omitempty"`
	// The server can provide estimated network parameters to be used for
	// initial parameter selection in future connections.
	CachedNetworkParameters *CachedNetworkParameters `protobuf:"bytes,3,opt,name=cached_network_parameters" json:"cached_network_parameters,omitempty"`
	XXX_unrecognized        []byte                   `json:"-"`
}

func (m *SourceAddressToken) Reset()                    { *m = SourceAddressToken{} }
func (m *SourceAddressToken) String() string            { return proto.CompactTextString(m) }
func (*SourceAddressToken) ProtoMessage()               {}
func (*SourceAddressToken) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SourceAddressToken) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *SourceAddressToken) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *SourceAddressToken) GetCachedNetworkParameters() *CachedNetworkParameters {
	if m != nil {
		return m.CachedNetworkParameters
	}
	return nil
}

// SourceAddressTokens are simply lists of SourceAddressToken messages.
type SourceAddressTokens struct {
	// This field has id 4 to avoid ambiguity between the serialized form of
	// SourceAddressToken vs SourceAddressTokens.
	Tokens           []*SourceAddressToken `protobuf:"bytes,4,rep,name=tokens" json:"tokens,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *SourceAddressTokens) Reset()                    { *m = SourceAddressTokens{} }
func (m *SourceAddressTokens) String() string            { return proto.CompactTextString(m) }
func (*SourceAddressTokens) ProtoMessage()               {}
func (*SourceAddressTokens) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *SourceAddressTokens) GetTokens() []*SourceAddressToken {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func init() {
	proto.RegisterType((*SourceAddressToken)(nil), "quic.SourceAddressToken")
	proto.RegisterType((*SourceAddressTokens)(nil), "quic.SourceAddressTokens")
}

var fileDescriptor1 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0xcf, 0xbf, 0x0a, 0xc2, 0x30,
	0x10, 0xc7, 0x71, 0x9a, 0x14, 0xc1, 0xd3, 0xc5, 0xb8, 0xc4, 0x82, 0x58, 0x3a, 0x75, 0xea, 0xe0,
	0x0b, 0xf8, 0x6f, 0x71, 0x12, 0x41, 0xf7, 0x10, 0xd2, 0x03, 0x4b, 0x69, 0x13, 0x93, 0x14, 0x5f,
	0xdf, 0xb6, 0x01, 0x97, 0xe2, 0x7a, 0x7c, 0xf9, 0xfc, 0x38, 0x48, 0x9c, 0xee, 0xac, 0x42, 0x21,
	0xcb, 0xd2, 0xa2, 0x73, 0xc2, 0xeb, 0x1a, 0xdb, 0xc2, 0x58, 0xed, 0x35, 0x8b, 0xdf, 0x5d, 0xa5,
	0x92, 0x9d, 0x92, 0xea, 0x85, 0xa5, 0x68, 0xd1, 0x7f, 0xb4, 0xad, 0x85, 0x91, 0x56, 0x36, 0xe8,
	0xd1, 0xba, 0x90, 0x65, 0x1d, 0xb0, 0xc7, 0x88, 0x9c, 0x82, 0xf1, 0x1c, 0x08, 0x06, 0x40, 0x2a,
	0xc3, 0xa3, 0x94, 0xe4, 0x4b, 0xb6, 0x82, 0xb9, 0xaf, 0x1a, 0x74, 0x5e, 0x36, 0x86, 0x93, 0xfe,
	0x44, 0xd9, 0x11, 0x36, 0x7f, 0x5d, 0x4e, 0xd3, 0x28, 0x5f, 0xec, 0xb7, 0xc5, 0xb0, 0x5f, 0x5c,
	0xc6, 0xec, 0x16, 0xaa, 0xfb, 0x2f, 0xca, 0x0e, 0xb0, 0x9e, 0xce, 0x3a, 0x96, 0xc3, 0x6c, 0xfc,
	0xc1, 0xf1, 0x38, 0xa5, 0xbd, 0xc2, 0x83, 0x32, 0x4d, 0xcf, 0xe4, 0x4a, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x55, 0x3c, 0x9f, 0xff, 0xff, 0x00, 0x00, 0x00,
}
